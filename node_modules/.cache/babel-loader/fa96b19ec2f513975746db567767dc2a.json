{"ast":null,"code":"const baseURL = 'https://strangers-things.herokuapp.com/api/2206-FTB-ET-WEB-PT';\nexport const getPosts = async () => {\n  try {\n    const response = await fetch(`${baseURL}/posts`);\n    const results = response.json();\n    return results;\n  } catch (error) {\n    console.log('error getting all posts');\n  }\n};\nexport const registerUser = async username => {\n  try {\n    const response = await fetch(`${baseURL}/users/register`, {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        user: {\n          username: {\n            username\n          },\n          password: {\n            password\n          }\n        }\n      })\n    }); // const results = response.json();\n    // console.log(result);\n  } catch (error) {\n    console.log(\"error registering user\");\n  }\n\n  const results = response;\n};","map":{"version":3,"names":["baseURL","getPosts","response","fetch","results","json","error","console","log","registerUser","username","method","headers","body","JSON","stringify","user","password"],"sources":["/Users/rachaelroyack/Library/Mobile Documents/com~apple~CloudDocs/WINDOWS-CODING-CLASS/CODING-CLASS/Desktop/web-projects/coding-class/course_work/StrangerThings/src/api/index.js"],"sourcesContent":["const baseURL = 'https://strangers-things.herokuapp.com/api/2206-FTB-ET-WEB-PT'\n\nexport const getPosts = async () => {\n    try {\n        const response = await fetch(`${baseURL}/posts`)\n        const results = response.json()\n\n        return results\n\n\n    } catch (error) {\n        console.log ('error getting all posts')\n    }\n    \n\n}\n\nexport const registerUser = async (username,) => {\n    try {\n        const response = await fetch (`${baseURL}/users/register`, {\n        method: \"POST\",\n        headers: {\n        'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n        user: {\n            username: {username},\n            password: {password}\n        }\n        })\n    })\n        \n        // const results = response.json();\n        // console.log(result);\n    } catch (error) {\n        console.log(\"error registering user\")\n    }\n\n    const results = response\n}"],"mappings":"AAAA,MAAMA,OAAO,GAAG,+DAAhB;AAEA,OAAO,MAAMC,QAAQ,GAAG,YAAY;EAChC,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEH,OAAQ,QAAZ,CAA5B;IACA,MAAMI,OAAO,GAAGF,QAAQ,CAACG,IAAT,EAAhB;IAEA,OAAOD,OAAP;EAGH,CAPD,CAOE,OAAOE,KAAP,EAAc;IACZC,OAAO,CAACC,GAAR,CAAa,yBAAb;EACH;AAGJ,CAbM;AAeP,OAAO,MAAMC,YAAY,GAAG,MAAOC,QAAP,IAAqB;EAC7C,IAAI;IACA,MAAMR,QAAQ,GAAG,MAAMC,KAAK,CAAG,GAAEH,OAAQ,iBAAb,EAA+B;MAC3DW,MAAM,EAAE,MADmD;MAE3DC,OAAO,EAAE;QACT,gBAAgB;MADP,CAFkD;MAK3DC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;QACrBC,IAAI,EAAE;UACFN,QAAQ,EAAE;YAACA;UAAD,CADR;UAEFO,QAAQ,EAAE;YAACA;UAAD;QAFR;MADe,CAAf;IALqD,CAA/B,CAA5B,CADA,CAcA;IACA;EACH,CAhBD,CAgBE,OAAOX,KAAP,EAAc;IACZC,OAAO,CAACC,GAAR,CAAY,wBAAZ;EACH;;EAED,MAAMJ,OAAO,GAAGF,QAAhB;AACH,CAtBM"},"metadata":{},"sourceType":"module"}